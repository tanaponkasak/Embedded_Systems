//=================================================================================================
// ETT_MCP342x.h
//=================================================================================================

//=================================================================================================
#ifndef _ETT_MCP342X_H_
#define _ETT_MCP342X_H_
//=================================================================================================

//=================================================================================================
#ifdef ARDUINO
  #if ARDUINO < 100
    #include "WProgram.h"
  #else
    #include "Arduino.h"
  #endif
#else
  #include "ArduinoWrapper.h"
#endif
//=================================================================================================

//=================================================================================================
#include <Wire.h>
//=================================================================================================

//=================================================================================================
// I2C Address of device
// MCP3421, MCP3425 & MCP3426 are factory programed for any of 0x68 thru 0x6F
//=================================================================================================
#define MCP342X_DEFAULT_ADDRESS	0x68
//=================================================================================================

//=================================================================================================
// MCP3422, MCP3423, MCP3424, MCP3427 & MCP3428 addresses are controlled by address lines A0 and A1
// each address line can be low (GND), high (VCC) or floating (FLT)
//=================================================================================================
#define MCP342X_A0GND_A1GND		0x68
#define MCP342X_A0GND_A1FLT		0x69
#define MCP342X_A0GND_A1VCC		0x6A
#define MCP342X_A0FLT_A1GND		0x6B
#define MCP342X_A0VCC_A1GND		0x6C
#define MCP342X_A0VCC_A1FLT		0x6D
#define MCP342X_A0VCC_A1VCC		0x6E
#define MCP342X_A0FLT_A1VCC		0x6F
//=================================================================================================

//=================================================================================================
// CONFIGURATION REGISTER -> Ready Bit(7)
// ?xxxxxxx = Ready Bit
// 0xxxxxxx = Output register has been updated with the latest conversion result
// 1xxxxxxx = Output register has not been updated
//=================================================================================================
#define MCP342X_RDY  0x80
//=================================================================================================

//=================================================================================================
// CONFIGURATION REGISTER -> Channel Selection Bits(6:5)
//=================================================================================================
// x??xxxxx = Channel Selection Bits
// x00xxxxx = Select Channel 1
// x01xxxxx = Select Channel 2
// x10xxxxx = Select Channel 3
// x11xxxxx = Select Channel 4
//=================================================================================================
#define	MCP342X_CHANNEL_1	    0x00
#define	MCP342X_CHANNEL_2	    0x20
#define	MCP342X_CHANNEL_3	    0x40
#define	MCP342X_CHANNEL_4	    0x60
#define	MCP342X_CHANNEL_MASK	0x60
//=================================================================================================

//=================================================================================================
// CONFIGURATION REGISTER -> Conversion Mode Bit(4)
//=================================================================================================
// xxx?xxxx = Conversion Mode Bit
// xxx0xxxx = One-Shot Conversion Mode
// xxx1xxxx = Continuous Conversion Mode
//=================================================================================================
#define MCP342X_MODE_ONESHOT    0x00
#define MCP342X_MODE_CONTINUOUS 0x10
//=================================================================================================

//=================================================================================================
// CONFIGURATION REGISTER -> Sample Rate Selection Bit
//=================================================================================================
// xxxx??xx = Sample Rate Selection Bit(3:2)
// xxxx00xx = 240 SPS (12 bits)
// xxxx01xx = 60 SPS (14 bits)
// xxxx10xx = 15 SPS (16 bits)
// xxxx11xx = 3.75 SPS (18 bits) -> (MCP3421, MCP3422, MCP3423, MCP3424 only)
//=================================================================================================
#define MCP342X_SIZE_12BIT	0x00
#define MCP342X_SIZE_14BIT	0x04
#define MCP342X_SIZE_16BIT	0x08
#define MCP342X_SIZE_18BIT	0x0C
#define MCP342X_SIZE_MASK	  0x0C
//=================================================================================================

//=================================================================================================
// CONFIGURATION REGISTER -> Gain Selection Bits(1:0)
// xxxxxx?? = Gain Selection Bits
// xxxxxx00 = x1
// xxxxxx01 = x2
// xxxxxx10 = x4
// xxxxxx11 = x8
//=================================================================================================
#define MCP342X_GAIN_1X	  0x00
#define MCP342X_GAIN_2X	  0x01
#define MCP342X_GAIN_4X	  0x02
#define MCP342X_GAIN_8X	  0x03
#define MCP342X_GAIN_MASK 0x03
//=================================================================================================

//=================================================================================================
// ETT_MCP342X()
//=================================================================================================
class ETT_MCP342X 
{
public:
  //===============================================================================================
  ETT_MCP342X();
  ETT_MCP342X(uint8_t address);
  //===============================================================================================
  
  //===============================================================================================      
  bool testConnection(void);
  //===============================================================================================
  
  //===============================================================================================
  // Set/Get the configuration bits for the ADC
  //===============================================================================================
  void setConfig(uint8_t config);
  uint8_t getConfigRegShdw(void);
  //===============================================================================================
  
  //===============================================================================================
  // Start a conversion
  //===============================================================================================
  bool startConversion(void);
  bool startConversion(uint8_t channel);
  //===============================================================================================
  
  //===============================================================================================      
  // Read the ADC result
  //===============================================================================================
  uint8_t getResult(int16_t *data);
  uint8_t getResult(int32_t *data);
  //===============================================================================================

  //===============================================================================================
  // Non-blocking Read the ADC result
  //===============================================================================================
  uint8_t checkforResult(int16_t *data);
  uint8_t checkforResult(int32_t *data);
  //===============================================================================================
private:
  uint8_t _devAddr;
  uint8_t _configRegShdw;
};
//=================================================================================================

//=================================================================================================
#endif /* _ETT_MCP342X_H_ */
//=================================================================================================

